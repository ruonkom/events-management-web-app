<?php
ini_set('display_errors', '1');
ini_set('display_startup_errors', '1');
error_reporting(E_ALL);
include('../db/config.php'); // Database connection

// Validate POST data
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Get the POST data (Message details)
    $name = $_POST['name'];
    $email = $_POST['email'];
    $message = $_POST['message'];

    // Ensure the fields are not empty
    if (empty($name) || empty($email) || empty($message)) {
        echo "All fields are required.";
        exit();
    }

    // Step 1: Insert a new vendor into the vendors table (Assume vendor table only needs vendor_id)
    $insert_vendor_query = "INSERT INTO vendors () VALUES ()"; // Empty insert for auto-incrementing vendor_id
    $stmt = $conn->prepare($insert_vendor_query);
    
    if ($stmt->execute()) {
        // Get the last inserted vendor_id (auto-generated by MySQL)
        $vendor_id = $conn->insert_id; // The auto-generated vendor_id
        echo "New vendor created with ID: " . $vendor_id . "<br>";
    } else {
        echo "Error creating vendor: " . $stmt->error;
        $stmt->close();
        $conn->close();
        exit();
    }
    $stmt->close();

    // Step 2: Insert the message into the messages table, linked to the newly created vendor_id
    $query = "INSERT INTO messages (vendor_id, name, email, message, created_at) 
              VALUES (?, ?, ?, ?, NOW())";

    // Prepare the statement
    $stmt = $conn->prepare($query);
    
    if ($stmt === false) {
        // Check if the statement preparation failed
        echo "Error preparing query: " . $conn->error;
        $conn->close();
        exit();
    }

    // Bind parameters (vendor_id, name, email, message)
    $stmt->bind_param("isss", $vendor_id, $name, $email, $message);

    // Execute the statement
    if ($stmt->execute()) {
        echo "Message saved successfully!";
    } else {
        // If execution fails, output the error
        echo "Error saving message: " . $stmt->error;
    }

    // Close statement and connection
    $stmt->close();
    $conn->close();
}
?>

